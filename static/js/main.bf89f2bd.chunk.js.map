{"version":3,"sources":["component/search-box/search-box.component.jsx","component/card/card.component.jsx","component/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","handleChange","placeholder","className","onChange","type","Card","props","alt","src","monster","id","name","email","CardList","monsters","map","App","searchMonsters","e","searchInput","target","value","toLocaleLowerCase","filteredMonsters","state","filter","includes","setState","fetch","then","response","json","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACxC,OACE,uBACEC,UAAU,SACVC,SAAUH,EACVI,KAAK,SACLH,YAAaA,MCLNI,G,YAAO,SAACC,GACnB,OACE,sBAAKJ,UAAU,iBAAf,UACE,qBACEK,IAAI,UACJC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BAEL,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,aCPXC,G,MAAW,SAACP,GACvB,IAAwBQ,EAIxB,OAAO,qBAAKZ,UAAU,YAAf,UAJiBY,EAI0BR,EAAMQ,SAH/CA,EAASC,KAAI,SAACN,GAAD,OAAa,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,YCwCzCM,E,kDAvCb,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IAgBRW,eAAiB,SAACC,GAChB,IAAMC,EAAcD,EAAEE,OAAOC,MAAMC,oBAC7BC,EAAmB,EAAKC,MAAMV,SAASW,QAAO,SAAChB,GAEnD,OADoBA,EAAQE,KAAKW,oBACdI,SAASP,MAE9B,EAAKQ,SAAS,CAAEJ,iBAAkBA,KArBlC,EAAKC,MAAQ,CACXV,SAAU,GACVS,iBAAkB,IAJH,E,gEAQE,IAAD,OAClBK,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACf,GACL,EAAKU,MAAMD,iBAAmBT,EAC9B,EAAKa,SAAS,CAAEb,SAAUA,S,+BAc9B,OACE,sBAAKZ,UAAU,MAAf,UACE,oBAAIA,UAAU,iBAAd,8BACA,cAAC,EAAD,CACEF,aAAcgC,KAAKf,eACnBhB,YAAY,oBAEd,cAAC,EAAD,CAAUa,SAAUkB,KAAKR,MAAMD,0B,GAnCrBU,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bf89f2bd.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./search-box.styles.css\";\nexport const SearchBox = ({ handleChange, placeholder }) => {\n  return (\n    <input\n      className=\"search\"\n      onChange={handleChange}\n      type=\"search\"\n      placeholder={placeholder}\n    />\n  );\n};\n","import React from \"react\";\n\nimport \"./card.styles.css\";\n\nexport const Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n      />\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { Card } from \"../card/card.component\";\nimport \"./card-list.styles.css\";\n\nexport const CardList = (props) => {\n  const createMonsters = (monsters) => {\n    return monsters.map((monster) => <Card key={monster.id} monster={monster}/>);\n  };\n\n  return <div className=\"card-list\">{createMonsters(props.monsters)}</div>;\n};\n","import React from \"react\";\n\nimport { SearchBox } from \"./component/search-box/search-box.component\";\nimport \"./App.css\";\n\nimport { CardList } from \"./component/card-list/card-list.component\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      filteredMonsters: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((monsters) => {\n        this.state.filteredMonsters = monsters;\n        this.setState({ monsters: monsters });\n      });\n  }\n\n  searchMonsters = (e) => {\n    const searchInput = e.target.value.toLocaleLowerCase();\n    const filteredMonsters = this.state.monsters.filter((monster) => {\n      const monsterName = monster.name.toLocaleLowerCase();\n      return monsterName.includes(searchInput);\n    });\n    this.setState({ filteredMonsters: filteredMonsters });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"monster-header\">Monsters Rolodex</h1>\n        <SearchBox\n          handleChange={this.searchMonsters}\n          placeholder=\"search monsters\"\n        />\n        <CardList monsters={this.state.filteredMonsters} />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}